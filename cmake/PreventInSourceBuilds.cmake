# cmake/PreventInSourceBuilds.cmake

include_guard(GLOBAL)

if(NOT DEFINED ALLOW_IN_SOURCE_BUILDS)
  option(ALLOW_IN_SOURCE_BUILDS "Allow configuring directly in the source tree" OFF)
endif()

function(project_prevent_in_source_builds)
  if(ALLOW_IN_SOURCE_BUILDS)
    message(STATUS "In-source builds are allowed by ALLOW_IN_SOURCE_BUILDS=ON")
    return()
  endif()

  get_filename_component(_src "${CMAKE_SOURCE_DIR}" REALPATH)
  get_filename_component(_bin "${CMAKE_BINARY_DIR}" REALPATH)

  if(_src STREQUAL _bin)
    message("")
    message("######################################################")
    message(" In-source builds are disabled for this project.")
    message(" Please configure in a separate build directory, for example:")
    message("")
    message("   PowerShell:")
    message("     mkdir build; cd build; cmake ..; cmake --build .")
    message("")
    message("   Bash:")
    message("     mkdir -p build && cd build && cmake .. && cmake --build .")
    message("")
    message(" If you already configured in-source, clean up the cache first:")
    message("")
    message("   PowerShell:")
    message("     Remove-Item CMakeCache.txt -Force -ErrorAction SilentlyContinue")
    message("     Remove-Item -Recurse -Force CMakeFiles -ErrorAction SilentlyContinue")
    message("")
    message("   Bash:")
    message("     rm -f CMakeCache.txt && rm -rf CMakeFiles")
    message("######################################################")
    message(FATAL_ERROR "Quitting configuration to prevent an in-source build.")
  endif()
endfunction()
